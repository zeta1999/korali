{
 "Configuration Settings":
 [
   {
    "Name": [ "Version" ],
    "Type": "std::string",
    "Description": "Run 'TMCMC' or 'mTMCMC'."
   },
   {
    "Name": [ "Population Size" ],
    "Type": "size_t",
    "Description": "Specifies the number of samples drawn from the posterior distribution at each generation."
   },
   {
    "Name": [ "Max Chain Length" ],
    "Type": "size_t",
    "Description": "Chains longer than Max Chain Length will be broken and samples will be duplicated (replacing samples associated with a chain length of 0). Max Chain Length of 1 corresponds to the BASIS algorithm [Wu2018]."
   },
   {
    "Name": [ "Default Burn In" ],
    "Type": "size_t",
    "Description": "Specifies the number of additional TMCMC steps per chain per generation."
   },
   {
    "Name": [ "Per Generation Burn In" ],
    "Type": "std::vector<size_t>",
    "Description": "Specifies the number of additional TMCMC steps per chain at specified generations (this property will overwrite Default Burn In at specified generations)."
   },
   {
    "Name": [ "Target Coefficient Of Variation" ],
    "Type": "double",
    "Description": "Target coefficient of variation of the plausibility weights to update the annealing exponent :math:`\\rho` (by default, this value is 1.00 as suggested in [Ching2007])."
   },
   {
    "Name": [ "Covariance Scaling" ],
    "Type": "double",
    "Description": "Scaling factor :math:`\\beta^2` of Covariance Matrix (by default, this value is 0.04 as suggested in [Ching2007])."
   },
   {
    "Name": [ "Min Annealing Exponent Update" ],
    "Type": "double",
    "Description": "Minimum increment of the exponent :math:`\\rho`. This parameter prevents TMCMC from stalling."
   },
   {
    "Name": [ "Max Annealing Exponent Update" ],
    "Type": "double",
    "Description": "Maximum increment of the exponent :math:`\\rho` (by default, this value is 1.0 (inactive))."
   },
   {
    "Name": [ "Adaptive Step Size" ],
    "Type": "bool",
    "Description": "Adaptively sets Step Size such that Proposal Acceptance Rate remains close to Target Acceptance Rate (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Step Size" ],
    "Type": "double",
    "Description": "Scaling factor of gradient and proposal distribution (only relevant for mTMCMC)."
   }, 
   {
    "Name": [ "Target Acceptance Rate" ],
    "Type": "double",
    "Description": "Target acceptance rate to scale Step Size, Apaptive Step Size must be set True (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Domain Extension Factor" ],
    "Type": "double",
    "Description": "Defines boundaries for eigenvalue adjustments of proposal distribution (only relevant for mTMCMC)."
   }
 ],

 "Termination Criteria":
 [
   {
    "Name": [ "Target Annealing Exponent" ],
    "Type": "double",
    "Criteria": "_previousAnnealingExponent >= _targetAnnealingExponent",
    "Description": "Determines the annealing exponent :math:`\\rho` to achieve before termination. TMCMC converges if :math:`\\rho` equals 1.0."
   }
 ],

 "Internal Settings":
 [
   {
    "Name": [ "Multinomial Generator" ],
    "Type": "korali::distribution::specific::Multinomial*",
    "Description": "Random number generator with a multinomial distribution."
   },
   {
    "Name": [ "Multivariate Generator" ],
    "Type": "korali::distribution::multivariate::Normal*",
    "Description": "Random number generator with a multivariate normal distribution."
   },
   {
    "Name": [ "Uniform Generator" ],
    "Type": "korali::distribution::univariate::Uniform*",
    "Description": "Random number generator with a uniform distribution."
   },
   {
    "Name": [ "Current Burn In" ],
    "Type": "size_t",
    "Description": "Actual placeholder for burn in steps per generation, calculated from Burn In Default, Burn In and Current Generation."
   },
   {
    "Name": [ "Chain Pending Evaluation" ],
    "Type": "std::vector<bool>",
    "Description": "Indicates that the model evaluation for the chain is pending."
   },
   {
    "Name": [ "Chain Pending Gradient" ],
    "Type": "std::vector<bool>",
    "Description": "Indicates that the gradient evaluation for the chain is pending (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Chain Candidates" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "All candidates of all chains to evaluate in order to advance the markov chains."
   },
   {
    "Name": [ "Chain Candidates LogLikelihoods" ],
    "Type": "std::vector<double>",
    "Description": "The loglikelihoods of the chain candidates."
   },
   {
    "Name": [ "Chain Candidates LogPriors" ],
    "Type": "std::vector<double>",
    "Description": "The logpriors of the chain candidates."
   },
   {
    "Name": [ "Chain Candidates Gradients" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Candidate gradient of statistical model wrt. sample variables."
   },
   {
    "Name": [ "Chain Candidates Errors" ],
    "Type": "std::vector<int>",
    "Description": "Shows if covariance calculation successfully terminated for candidate (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Chain Candidates Covariance" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Candidates covariance of normal proposal distribution."
   },
   {
    "Name": [ "Chain Leaders" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Leading parameters of all chains to be accepted."
   },
   {
    "Name": [ "Chain Leaders LogLikelihoods" ],
    "Type": "std::vector<double>",
    "Description": "The loglikelihoods of the chain leaders."
   },
   {
    "Name": [ "Chain Leaders LogPriors" ],
    "Type": "std::vector<double>",
    "Description": "The logpriors of the chain leaders."
   },
   {
    "Name": [ "Chain Leaders Gradients" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Leader gradient of statistical model wrt. sample variables."
   }, 
   {
    "Name": [ "Chain Leaders Errors" ],
    "Type": "std::vector<int>",
    "Description": "Shows if covariance calculation successfully terminated for leader (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Chain Leaders Covariance" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Leader covariance of normal proposal distribution."
   },
   {
    "Name": [ "Finished Chains Count" ],
    "Type": "size_t",
    "Description": "Number of finished chains."
   },
   {
    "Name": [ "Current Chain Step" ],
    "Type": "std::vector<size_t>",
    "Description": "The current execution step for every chain."
   },
   {
    "Name": [ "Chain Lengths" ],
    "Type": "std::vector<size_t>",
    "Description": "Lengths for each of the chains."
   },
   {
    "Name": [ "Coefficient Of Variation" ],
    "Type": "double",
    "Description": "Actual coefficient of variation after :math:`\\rho` has beed updated."
   },
   {
    "Name": [ "Chain Count" ],
    "Type": "size_t",
    "Description": "Unique selections after resampling stage."
   },
   {
    "Name": [ "Annealing Exponent" ],
    "Type": "double",
    "Description": "Exponent of the likelihood. If :math:`\\rho` equals 1.0, TMCMC converged."
   },
   {
    "Name": [ "Previous Annealing Exponent" ],
    "Type": "double",
    "Description": "Previous Exponent of the likelihood. If :math:`\\rho` equals 1.0, TMCMC converged."
   },
   {
    "Name": [ "Num Finite Prior Evaluations" ],
    "Type": "size_t",
    "Description": "Number of finite prior evaluations per gerneration."
   },
   {
    "Name": [ "Num Finite Likelihood Evaluations" ],
    "Type": "size_t",
    "Description": "Number of finite likelihood evaluations per gerneration."
   },
   {
    "Name": [ "Accepted Samples Count" ],
    "Type": "size_t",
    "Description": "Accepted candidates after proposal."
   },
   {
    "Name": [ "LogEvidence" ],
    "Type": "double",
    "Description": "Calculated logEvidence of the model."
   },
   {
    "Name": [ "Proposals Acceptance Rate" ],
    "Type": "double",
    "Description": "Acceptance rate calculated from accepted samples."
   },
   {
    "Name": [ "Selection Acceptance Rate" ],
    "Type": "double",
    "Description": "Acceptance rate calculated from unique samples (chain count) after recombination."
   },
   {
    "Name": [ "Covariance Matrix" ],
    "Type": "std::vector<double>",
    "Description": "Sample covariance of the current leaders updated at every generation."
   },
   {
    "Name": [ "Max Loglikelihood" ],
    "Type": "double",
    "Description": "Max Loglikelihood found in current generation."
   },
   {
    "Name": [ "Mean Theta" ],
    "Type": "std::vector<double>",
    "Description": "Mean of the current leaders updated at every generation."
   },
   {
    "Name": [ "Sample Database" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Parameters stored in the database (taken from the chain leaders)."
   },
   {
    "Name": [ "Sample LogLikelihood Database" ],
    "Type": "std::vector<double>",
    "Description": "LogLikelihood Evaluation of the parameters stored in the database."
   },
   {
    "Name": [ "Sample LogPrior Database" ],
    "Type": "std::vector<double>",
    "Description": "Log priors of the samples stored in the database."
   },
   {
    "Name": [ "Sample Gradient Database" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Gradients stored in the database (taken from the chain leaders, only mTMCMC)."
   },
   {
    "Name": [ "Sample Error Database" ],
    "Type": "std::vector<int>",
    "Description": "Shows if covariance calculation successfully terminated for sample (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Sample Covariances Database" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Gradients stored in the database (taken from the chain leaders, only mTMCMC)."
   },
   {
    "Name": [ "Upper Extended Boundaries" ],
    "Type": "std::vector<double>",
    "Description": "Calculated upper domain boundaries (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Lower Extended Boundaries" ],
    "Type": "std::vector<double>",
    "Description": "Calculated lower domain boundaries (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Num LU Decomposition Failures Proposal" ],
    "Type": "size_t",
    "Description": "Number of failed LU decompositions (only relevan for mTMCMC)."
   },
   {
    "Name": [ "Num Eigen Decomposition Failures Proposal" ],
    "Type": "size_t",
    "Description": "Number of failed Eigenvalue problems (only relevan for mTMCMC)."
   },
   {
    "Name": [ "Num Inversion Failures Proposal" ],
    "Type": "size_t",
    "Description": "Number of failed FIM inversions (only relevan for mTMCMC)."
   },
   {
    "Name": [ "Num Negative Definite Proposals" ],
    "Type": "size_t",
    "Description": "Number of Fisher information matrices with negative eigenvalues (only relevan for mTMCMC)."
   },
   {
    "Name": [ "Num Cholesky Decomposition Failures Proposal" ],
    "Type": "size_t",
    "Description": "Number of failed chol. decomp. during proposal step (only relevant for mTMCMC)."
   },
   {
    "Name": [ "Num Covariance Corrections" ],
    "Type": "size_t",
    "Description": "Number of covariance adaptions (only relevant for mTMCMC)."
   }

 ],
 
 "Module Defaults":
 {
  "Multinomial Generator":
  {
   "Type": "Specific/Multinomial"
  },
 
  "Multivariate Generator":
  {
  "Type": "Multivariate/Normal"
  },
  
 "Uniform Generator":
  {
   "Type": "Univariate/Uniform",
   "Minimum": 0.0,
   "Maximum": 1.0
  },
 
  "Version" : "TMCMC",
  "Max Chain Length": 1,
  "Default Burn In": 0,
  "Per Generation Burn In": [ ],
  "Target Coefficient Of Variation": 1.0,
  "Covariance Scaling": 0.04,
  "Min Annealing Exponent Update": 0.00001,
  "Max Annealing Exponent Update": 1.0,
  "Domain Extension Factor" : 0.2,
  "Adaptive Step Size" : false,
  "Step Size" : 0.1,
  "Target Acceptance Rate": 0.68,
  
  "Termination Criteria":
  {
   "Target Annealing Exponent": 1.0
  }
 }
}
